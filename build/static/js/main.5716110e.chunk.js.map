{"version":3,"sources":["api/ApiInstance.ts","api/Profile.ts","components/Alert.tsx","components/Loading.tsx","context/context.tsx","components/Button.tsx","components/Header.tsx","components/Layout.tsx","api/auth.ts","components/Card.tsx","components/Input.tsx","components/Board.tsx","utils/index.ts","components/Signup.tsx","components/Login.tsx","components/Toolbar.tsx","components/PublicBoardHeader.tsx","components/Modal.tsx","components/CheckBox.tsx","components/Profile.tsx","components/NotFound.tsx","api/Public.ts","components/TaskAdd.tsx","components/TaskView.tsx","components/PublicBoard.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Api","require","create","baseURL","window","location","protocol","host","timeout","headers","contentType","interceptors","response","use","data","error","Promise","reject","Status","getAuthorization","Authorization","localStorage","getItem","getProfile","a","get","Headers","console","log","getBoards","saveBoard","newBoard","post","updateBoard","boardId","params","put","deleteBoard","id","delete","cloneBoard","className","AppContext","React","createContext","user","loaded","useAuth","useContext","Action","fetchProfile","cb","loadedcb","removeItem","children","useState","profile","setProfile","setLoaded","useEffect","props","Provider","value","PrimaryBtn","label","onClickEvent","name","isDisabled","icon","onClick","aria-hidden","SecondaryBtn","CloseBtn","RenderCommonNav","pathname","useLocation","toggle","setToggle","to","e","stopPropagation","viewBox","xmlns","d","includes","memo","auth","reload","signup","login","title","shouldClickable","type","onChangeEvent","placeholder","min","max","onChange","CheckBoxEnum","BOARD_EVENT","AlertStyles","width","wordBreak","status","callbackHandler","style","copyLink","customLink","link","href","navigator","clipboard","writeText","anonymousUser","annonymousToken","setItem","uuid","isEmailValid","str","test","String","toLowerCase","router","useHistory","api","showAlert","message","errorObj","setErrorObj","successObj","setsuccessObj","fieldError","setFieldError","btnDisable","setBtnDisable","fullName","email","password","formFields","setFormFields","onSignupClicked","statusText","onInputChange","target","Object","values","every","v","onAlertDismiss","Alert","DANGER","SUCCESS","Card","Input","push","onLoginClickHandler","accessToken","onCallBack","CheckBoxTypes","onShareClicked","span","currentTarget","getAttribute","dispatchEvent","Event","COPIED","salt","createdAt","onDelete","onClone","formatDistance","subDays","Date","toUpperCase","data-link","elem","document","getElementById","onSave","onCancel","show","shouldDisableBtn","ReactDOM","createPortal","height","body","isChecked","checked","withRouter","history","showModal","setModal","setAlert","errorAlert","setErrorAlert","boards","setBoards","url","setUrl","disableVotes","shouldHideTask","hideVoteCount","votes","columns","options","setOptions","onSaveBoard","newBoards","onBoardDelete","board","find","o","idx","indexOf","splice","onBoardClone","onChangeHandler","NAME","NO_OF_VOTES","parseInt","onCheckBoxChanged","DISABLE_VOTES","SHOULD_HIDE_TASK","HIDE_VOTE_COUNT","addEventListener","copiedLinkEvent","setTimeout","removeEventListener","Number","CheckBox","map","key","encodeURIComponent","Board","templates","getPublicBoards","signature","submitFeedback","deletePublicTask","taskId","updateFeedback","boardTemplateId","task","onDeleteCallBack","description","noOfVotes","onAddHandler","newTask","isEditable","result","isNewTask","scrollHeight","aira-hidden","onEditHandler","onDeleteHandler","maxVoteLimit","onVotesHandler","ws","send","toServer","onShareHandler","boardData","setBoardData","HIDE_VOTE","WebSocket","JSON","stringify","event","res","tasks","forEach","decodeURIComponent","setBoard","taskLists","setTaskLists","readyState","OPEN","CLOSED","onopen","onmessage","parse","resettingTasks","fetchTasks","i","length","t","oldTasks","filter","onTaskViewDeleteHandler","onTaskAddOrEditCallback","onDeleteTaskAddHandler","PublicBoardHeader","template","templateId","addNewTaskHandler","TaskAdd","renderTaskView","LayoutWrapper","exact","path","render","match","strict","NotFound","Login","Signup","App","Boolean","hostname","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5716110e.chunk.js","sourcesContent":["import { AppEvent } from \"../utils/AppEvent\";\n\nconst axios = require(\"axios\");\n\nexport const Api = axios.create({\n  baseURL: `${window.location.protocol}//${window.location.host}`,\n  timeout: 0,\n  headers: { contentType: \"application/json\" }\n});\n\nApi.interceptors.response.use(\n  function(response: any) {\n    return response.data;\n  },\n  function(error: any) {\n    return Promise.reject(error);\n  }\n);\n","import { Api } from \"./ApiInstance\";\nimport { CreateBoardDto } from \"../components/Board\";\nimport { Board } from \"../context/context\";\n\nconst getAuthorization = function() {\n  return { Authorization: `Bearer ${window.localStorage.getItem(\"token\")}` };\n};\nexport default () => {\n  return {\n    getProfile: async () => {\n      let response = null;\n      try {\n        response = await Api.get(\"/board/profile\", {\n          headers: { ...Headers, ...getAuthorization() }\n        });\n        return response;\n      } catch (e) {\n        console.log(e);\n        throw e;\n      }\n    },\n    getBoards: async () => {\n      let response = null;\n      try {\n        response = await Api.get(\"/board/boards\", {\n          headers: { ...Headers, ...getAuthorization() }\n        });\n        return response;\n      } catch (e) {\n        console.log(e);\n        throw e;\n      }\n    },\n    saveBoard: async (newBoard: CreateBoardDto) => {\n      let response = null;\n      try {\n        response = await Api.post(\"/board/create\", newBoard, {\n          headers: { ...Headers, ...getAuthorization() }\n        });\n        return response;\n      } catch (e) {\n        console.log(e);\n        throw e;\n      }\n    },\n    updateBoard: async (boardId: number, params: Board) => {\n      let response = null;\n      try {\n        response = await Api.put(`/board/${boardId}`, params, {\n          headers: { ...Headers, ...getAuthorization() }\n        });\n        return response;\n      } catch (e) {\n        console.log(e);\n        throw e;\n      }\n    },\n    deleteBoard: async (id: number) => {\n      let response = null;\n      try {\n        response = await Api.delete(`/board/${id}`, {\n          headers: { ...Headers, ...getAuthorization() }\n        });\n        return response;\n      } catch (e) {\n        console.log(e);\n        throw e;\n      }\n    },\n    cloneBoard: async (id: number) => {\n      let response = null;\n      try {\n        response = await Api.get(`/board/clone/${id}`, {\n          headers: { ...Headers, ...getAuthorization() }\n        });\n        return response;\n      } catch (e) {\n        console.log(e);\n        throw e;\n      }\n    }\n  };\n};\n","import React, { CSSProperties, MouseEvent } from \"react\";\nimport { CloseBtn } from \"./Button\";\n\nexport enum Status {\n  DANGER = \"bg-red-600\",\n  SUCCESS = \"bg-green-600\",\n  WARNING = \"bg-orange-600\",\n  INFO = \"bg-blue-600\"\n}\ninterface AlertProps {\n  children: string | React.ReactNode;\n  status: Status.DANGER | Status.INFO | Status.SUCCESS | Status.WARNING;\n  callbackHandler?: (e: MouseEvent) => void;\n}\n\nconst AlertStyles: CSSProperties = {\n  width: \"90%\",\n  wordBreak: \"break-all\"\n};\n\nexport default ({ children, status, callbackHandler }: AlertProps) => (\n  <div className={`px-4 py-2 ${status}`}>\n    <div className=\"flex\">\n      <div className=\"flex-1 pt-1 text-white text-xl\" style={AlertStyles}>\n        {children}\n      </div>\n      <div>\n        <CloseBtn name=\"closebtn\" onClickEvent={callbackHandler} />\n      </div>\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport \"./Loading.css\";\nexport default () => (\n  <div className=\"w-full flex flex-col justify-center h-screen bg-gray-200\">\n    <div className=\"lds-roller self-center\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </div>\n);\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Action from \"../api/Profile\";\nimport Loading from \"../components/Loading\";\n\ninterface ContextProps {\n  user: User | null;\n  loaded: boolean;\n}\n\nconst initalProps: ContextProps = {\n  user: null,\n  loaded: false\n};\n\nconst AppContext = React.createContext<ContextProps>(initalProps);\n\nexport const useAuth = () => {\n  const context = useContext<ContextProps>(AppContext);\n  return context;\n};\n\nexport interface BoardColumn {\n  name: string;\n  id: number;\n}\n\nexport interface Board {\n  id: number;\n  name: string;\n  userId: number;\n  templates: BoardColumn[];\n  salt: string;\n  createdAt: string;\n  disableVotes: boolean;\n  hideVoteCount: boolean;\n  shouldHideTask: boolean;\n}\nexport interface User {\n  id: number;\n  email: string;\n  fullName: string;\n  createdAt: string;\n  isVerfied: boolean;\n  boards: Board[];\n}\nconst Api = Action();\n\nconst fetchProfile = async function(cb: any, loadedcb: any) {\n  try {\n    const { user } = await Api.getProfile();\n    const userObj: User = user as User;\n    cb(userObj);\n  } catch (e) {\n    window.localStorage.removeItem(\"token\");\n    throw e;\n  } finally {\n    loadedcb(true);\n  }\n};\n\nexport default ({ children }: any) => {\n  const [profile, setProfile] = useState<User | null>(null);\n  const [loaded, setLoaded] = useState<boolean>(false);\n  useEffect(() => {\n    fetchProfile(setProfile, setLoaded);\n  }, []);\n\n  if (!loaded) return <Loading />;\n  const props: ContextProps = {\n    user: profile,\n    loaded: loaded\n  };\n  return <AppContext.Provider value={props}>{children}</AppContext.Provider>;\n};\n","import React, { MouseEvent } from \"react\";\ninterface ButtonProps {\n  label?: string;\n  name?: string;\n  onClickEvent?: (e: MouseEvent) => void;\n  isDisabled?: boolean;\n  icon?: string;\n  className?: string;\n}\nexport const PrimaryBtn = ({\n  label,\n  onClickEvent,\n  name,\n  isDisabled,\n  icon\n}: ButtonProps) => (\n  <button\n    className={`bg-blue-800 h-12 w-full hover:bg-blue-700 text-white uppercase tracking-wider ${\n      isDisabled ? \"opacity-50 cursor-not-allowed pointer-events-none\" : \"\"\n    }`}\n    onClick={onClickEvent}\n    name={name}\n  >\n    {label} {icon && <i className={icon} aria-hidden=\"true\" />}\n  </button>\n);\n\nexport const SecondaryBtn = ({\n  label,\n  onClickEvent,\n  name,\n  isDisabled,\n  icon,\n  className\n}: ButtonProps) => (\n  <button\n    className={`bg-orange-600 h-12 w-full hover:bg-orange-500 text-white uppercase tracking-wider px-3 ${\n      isDisabled ? \"opacity-50 cursor-not-allowed pointer-events-none\" : \"\"\n    } ${className}`}\n    onClick={onClickEvent}\n    name={name}\n  >\n    {label} {icon && <i className={icon} aria-hidden=\"true\" />}\n  </button>\n);\n\nexport const CloseBtn = ({ onClickEvent, name }: ButtonProps) => (\n  <button\n    className=\"text-white rounded-full border border-2 border-white px-3 py-1 hover:bg-white hover:text-black\"\n    onClick={onClickEvent}\n    name={name}\n  >\n    X\n  </button>\n);\n","import React, { MouseEvent, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useAuth } from \"../context/context\";\nimport { SecondaryBtn } from \"./Button\";\n\ninterface HeaderProps {\n  children?: React.ReactNode | React.ReactNodeArray;\n  user?: any;\n}\n\nconst RenderCommonNav = function({ children, user }: HeaderProps) {\n  const { pathname } = useLocation();\n  const [toggle, setToggle] = useState<boolean>(false);\n  const onToggleMenu = function(e: MouseEvent) {\n    e.stopPropagation();\n    setToggle(toggle => !toggle);\n  };\n  return (\n    <nav className=\"flex items-center justify-between flex-wrap bg-gray-800 p-2 fixed w-full z-10 top-0\">\n      <div className=\"flex items-center flex-shrink-0 text-white mr-6\">\n        <Link\n          className=\"text-white no-underline hover:text-white hover:no-underline\"\n          to=\"/\"\n        >\n          <span className=\"text-2xl pl-2\">\n            <i className=\"em em-grinning\"></i> Review.io\n          </span>\n        </Link>\n      </div>\n\n      <div className={`${!toggle ? \"lg:hidden\" : \"block\"}`}>\n        <button\n          id=\"nav-toggle\"\n          onClick={onToggleMenu}\n          className=\"flex items-center px-3 py-2 border rounded text-gray-500 border-gray-600 hover:text-white hover:border-white\"\n        >\n          <svg\n            className=\"fill-current h-3 w-3\"\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <title>Menu</title>\n            <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\n          </svg>\n        </button>\n      </div>\n      {!user && (\n        <div\n          className={`w-full flex-grow lg:flex lg:items-center lg:w-auto ${\n            !toggle ? \"hidden\" : \"lg:block\"\n          } lg:pt-0\"\n          id=\"nav-content`}\n        >\n          <ul className=\"list-reset lg:flex justify-end flex-1 items-center\">\n            {!pathname.includes(\"public\") && (\n              <li className=\"mr-3\">\n                <Link\n                  className=\"inline-block text-gray-600 no-underline hover:text-gray-200 hover:text-underline py-2 px-4\"\n                  to=\"/signup\"\n                >\n                  Signup\n                </Link>\n              </li>\n            )}\n            <li className=\"mr-3\">\n              <Link\n                className=\"inline-block py-2 px-4 text-white no-underline\"\n                to=\"/login\"\n              >\n                Login\n              </Link>\n            </li>\n          </ul>\n        </div>\n      )}\n      {children}\n    </nav>\n  );\n};\n\nconst Header = () => {\n  const auth = useAuth();\n  const { pathname } = useLocation();\n  const { user } = auth;\n  const logoutHandler = function(e: MouseEvent) {\n    window.localStorage.removeItem(\"token\");\n    window.location.reload();\n  };\n\n  if (pathname.includes(\"public\") && !user) {\n    return (\n      <div className=\" bg-gray-800 h-12 mb-4\">\n        <RenderCommonNav />\n      </div>\n    );\n  }\n  return (\n    <header className=\"mb-16\">\n      <RenderCommonNav user={user}>\n        {user && (\n          <div\n            className=\"w-full lg:flex lg:items-center lg:w-auto hidden pt-6 lg:pt-0\"\n            id=\"nav-content\"\n          >\n            <SecondaryBtn\n              label=\"\"\n              name=\"logout\"\n              icon=\"fa fa-power-off\"\n              onClickEvent={logoutHandler}\n            />\n          </div>\n        )}\n      </RenderCommonNav>\n    </header>\n  );\n};\nexport default React.memo(Header);\n","import React from \"react\";\n\ninterface LayoutProps {\n  children: React.ReactNode | React.ReactNodeArray;\n}\n\nconst Layout = ({ children }: LayoutProps) => {\n  return <div className=\"w-full bg-gray-200 h-screen\">{children}</div>;\n};\n\nexport default React.memo(Layout);\n","import { Api } from \"./ApiInstance\";\ninterface SignupDto {\n  email: string;\n  fullName: string;\n  password: string;\n}\ninterface LoginDto {\n  email: string;\n  password: string;\n}\nexport const Action = () => ({\n  signup: async (params: SignupDto) => {\n    let response = null;\n    try {\n      response = await Api.post(\"/auth/signup\", params);\n    } catch (e) {\n      console.log(e);\n      throw e;\n    }\n    return response;\n  },\n  login: async (params: LoginDto) => {\n    let response = null;\n    try {\n      response = await Api.post(\"/auth/signin\", params);\n    } catch (e) {\n      console.log(e);\n      throw e;\n    }\n    return response;\n  }\n});\n","import React from \"react\";\ninterface CardProps {\n  title: string;\n  children: React.ReactNode | React.ReactNodeArray;\n  shouldClickable?: boolean;\n}\nexport default ({ title, children, shouldClickable = false }: CardProps) => (\n  <div\n    className={`bg-white mt-5 mb-5 pb-5 border-0 border-blue-400 shadow h-full\n hover:shadow-lg ${shouldClickable ? \"cursor-pointer\" : \"\"}`}\n  >\n    <div className=\"p-1 flex flex-col h-full\">\n      <header className=\"p-2 flex-1\">\n        <h1\n          className={`text-2xl text-center ${\n            title ? \"border-b\" : \"\"\n          } uppercase tracking-wider font-bold text-gray-700`}\n        >\n          {title}\n        </h1>\n      </header>\n      <div className=\"pl-3 pr-3 pb-3\">{children}</div>\n    </div>\n  </div>\n);\n","import React, { SyntheticEvent } from \"react\";\n\ninterface InputProps {\n  type: string;\n  placeholder?: string;\n  onChangeEvent?: (e: SyntheticEvent) => void;\n  className?: string;\n  name?: string;\n  value: string | number;\n  min?: number | string;\n  max?: number | string;\n}\nexport default ({\n  type,\n  onChangeEvent,\n  placeholder,\n  name,\n  className,\n  value,\n  min,\n  max\n}: InputProps) => (\n  <>\n    <input\n      type={type}\n      onChange={onChangeEvent}\n      placeholder={placeholder}\n      name={name}\n      value={value}\n      min={min}\n      max={max}\n      className={`w-full h-16 border-b border-b-2 shadow p-3 ${className}`}\n    />\n  </>\n);\n","import React, { MouseEvent } from \"react\";\nimport { formatDistance, subDays } from \"date-fns\";\nimport { copyLink } from \"../utils\";\nimport Card from \"./Card\";\nimport { BoardColumn } from \"../context/context\";\n\nexport enum CheckBoxEnum {\n  DISABLE_VOTES = \"disableVotes\",\n  SHOULD_HIDE_TASK = \"shouldHideTask\",\n  HIDE_VOTE_COUNT = \"hideVoteCount\",\n  NO_OF_VOTES = \"votes\",\n  NAME = \"name\"\n}\n\nexport interface BoardProps {\n  name: string;\n  id: number;\n  salt: string;\n  createdAt: string;\n  templates: BoardColumn[];\n  userId?: number;\n  onDelete: (id: number) => void;\n  onClone: (id: number) => void;\n}\n\nexport interface CreateBoardDto {\n  votes: number;\n  hideVoteCount: boolean;\n  shouldHideTask: boolean;\n  disableVotes: boolean;\n  name: string;\n  columns: BoardColumn[];\n}\n\nexport interface CreateBoard {\n  name: string;\n  columns: BoardColumn[];\n}\n\nexport enum BOARD_EVENT {\n  COPIED = \"GLOABAL_ALERT\"\n}\n\nconst onShareClicked = async function(e: MouseEvent<HTMLSpanElement>) {\n  e.stopPropagation();\n  const span = e.currentTarget as HTMLSpanElement;\n  const link = span.getAttribute(\"data-link\") as string;\n  try {\n    await copyLink(link);\n    window.dispatchEvent(new Event(BOARD_EVENT.COPIED));\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport default ({\n  name,\n  id,\n  salt,\n  createdAt,\n  onDelete,\n  onClone\n}: BoardProps) => (\n  <Card title={name} shouldClickable>\n    <div className=\"flex flex-col h-full\">\n      <span className=\"block mt-2 mb-2 text-gray-800\">\n        <span className=\"block text-center\">\n          <i className=\"fa fa-clock\" aria-hidden=\"true\" />\n          <span className=\"pl-1\">\n            {formatDistance(\n              subDays(new Date(createdAt), 0),\n              new Date()\n            ).toUpperCase()}\n          </span>\n        </span>\n      </span>\n      <div className=\"flex justify-around lg:justify-between items-center\">\n        <span\n          className=\"inline-block mt-2 cursor-pointer text-gray-600 hover:text-gray-800\"\n          data-link={salt}\n          onClick={onShareClicked}\n        >\n          <i className=\"fa fa-share-alt\" aria-hidden=\"true\"></i>\n          <span className=\"pl-2\">Share</span>\n        </span>\n        <span\n          className=\"inline-block mt-2 cursor-pointer text-gray-600 hover:text-gray-800\"\n          onClick={(e: MouseEvent) => {\n            e.stopPropagation();\n            onClone(id);\n          }}\n        >\n          <i className=\"fa fa-clone\" aria-hidden=\"true\"></i>\n          <span className=\"pl-2\">Clone</span>\n        </span>\n        <span\n          className=\"inline-block mt-2 cursor-pointer text-red-600 hover:text-red-800\"\n          onClick={(e: MouseEvent) => {\n            e.stopPropagation();\n            onDelete(id);\n          }}\n        >\n          <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\n          <span className=\"pl-2\">Delete</span>\n        </span>\n      </div>\n    </div>\n  </Card>\n);\n","import * as uuid from \"uuid\";\nexport const copyLink = async function(customLink: string = \"\") {\n  const link = !customLink\n    ? window.location.href\n    : `${window.location.protocol}//${window.location.host}/${customLink}`;\n  try {\n    await navigator.clipboard.writeText(link);\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const anonymousUser = function() {\n  const annonymousToken = localStorage.getItem(\"annonymousToken\");\n  if (!annonymousToken) {\n    localStorage.setItem(\"annonymousToken\", uuid.v4());\n    return localStorage.getItem(\"annonymousToken\");\n  }\n  return annonymousToken;\n};\n\nexport const isEmailValid = function(str: string): boolean {\n  let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(str).toLowerCase());\n};\n","import React, { MouseEvent, useState, SyntheticEvent } from \"react\";\nimport { Action } from \"../api/auth\";\nimport { useHistory } from \"react-router-dom\";\nimport { PrimaryBtn, SecondaryBtn } from \"./Button\";\nimport Card from \"./Card\";\nimport Input from \"./Input\";\nimport Alert, { Status } from \"./Alert\";\nimport { isEmailValid } from \"../utils\";\n\nexport default () => {\n  const router = useHistory();\n  const api = Action();\n  const [errorObj, setErrorObj] = useState({ showAlert: false, message: \"\" });\n  const [successObj, setsuccessObj] = useState({\n    showAlert: false\n  });\n  const [fieldError, setFieldError] = useState(false);\n\n  const [btnDisable, setBtnDisable] = useState(true);\n  const [formFields, setFormFields] = useState({\n    fullName: \"\",\n    email: \"\",\n    password: \"\"\n  });\n\n  const onSignupClicked = async function(e: MouseEvent) {\n    if (btnDisable) return;\n    if (!isEmailValid(formFields.email)) {\n      setFieldError(true);\n      return;\n    }\n    try {\n      await api.signup(formFields);\n      setFormFields({\n        fullName: \"\",\n        email: \"\",\n        password: \"\"\n      });\n      successObj.showAlert = true;\n      setsuccessObj({ ...successObj });\n    } catch (e) {\n      errorObj.showAlert = true;\n      errorObj.message = e.response.statusText;\n      setErrorObj({ ...errorObj });\n      console.log(e);\n    } finally {\n    }\n  };\n\n  const onInputChange = function(e: SyntheticEvent) {\n    const { value, name } = e.target as HTMLInputElement;\n    if (name === \"fullName\") formFields.fullName = value;\n    if (name === \"email\") formFields.email = value;\n    if (name === \"password\") formFields.password = value;\n    setFormFields({ ...formFields });\n    const isValid = Object.values(formFields).every(v => v !== \"\");\n    if (isValid) {\n      setBtnDisable(false);\n    }\n  };\n\n  const onAlertDismiss = function(e: MouseEvent) {\n    if (errorObj.showAlert) {\n      errorObj.showAlert = false;\n      errorObj.message = \"\";\n      setErrorObj({ ...errorObj });\n      return;\n    }\n    if (successObj.showAlert) {\n      successObj.showAlert = false;\n      setsuccessObj({ ...successObj });\n      return;\n    }\n  };\n\n  return (\n    <div className=\"m-2 self-center w-full md:w-1/2\">\n      {errorObj.showAlert && (\n        <Alert status={Status.DANGER} callbackHandler={onAlertDismiss}>\n          {errorObj.message}\n        </Alert>\n      )}\n      {successObj.showAlert && (\n        <Alert status={Status.SUCCESS} callbackHandler={onAlertDismiss}>\n          <h1>Successfully created!</h1>\n        </Alert>\n      )}\n      <Card title=\"Signup\">\n        <div className=\"mb-5\">\n          <Input\n            type=\"text\"\n            placeholder=\"Name\"\n            name=\"fullName\"\n            value={formFields.fullName}\n            onChangeEvent={onInputChange}\n          />\n        </div>\n        <div className=\"mb-5\">\n          <Input\n            type=\"email\"\n            placeholder=\"Your email\"\n            name=\"email\"\n            value={formFields.email}\n            onChangeEvent={onInputChange}\n          />\n          {fieldError && (\n            <span className=\"text-red-600\">\n              <em>Email is not valid</em>\n            </span>\n          )}\n        </div>\n        <div className=\"mb-5\">\n          <Input\n            type=\"password\"\n            placeholder=\"password\"\n            name=\"password\"\n            value={formFields.password}\n            onChangeEvent={onInputChange}\n          />\n          <span className=\"text-gray-600 tracking-widest block pt-2\">\n            Should contain at least 8 chars, 1 number, 1 uppercase, <br /> 1\n            lowercase and 1 special char.\n          </span>\n        </div>\n        <div>\n          <PrimaryBtn\n            label=\"Signup\"\n            name=\"signup\"\n            onClickEvent={onSignupClicked}\n            isDisabled={btnDisable}\n          />\n        </div>\n        {successObj.showAlert && (\n          <div className=\"mt-5\">\n            <SecondaryBtn\n              label=\"Go to Login\"\n              name=\"login\"\n              onClickEvent={e => router.push(\"/login\")}\n            />\n          </div>\n        )}\n      </Card>\n    </div>\n  );\n};\n","import React, { useState, SyntheticEvent, MouseEvent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Action } from \"../api/auth\";\nimport Card from \"./Card\";\nimport Input from \"./Input\";\nimport { PrimaryBtn } from \"./Button\";\nimport Alert, { Status } from \"./Alert\";\nimport { isEmailValid } from \"../utils\";\n\nexport default () => {\n  const api = Action();\n\n  const [btnDisable, setBtnDisable] = useState(true);\n  const [errorObj, setErrorObj] = useState({ showAlert: false });\n  const [fieldError, setFieldError] = useState(false);\n\n  const [formFields, setFormFields] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const onLoginClickHandler = async function(e: MouseEvent) {\n    if (btnDisable) return;\n    if (!isEmailValid(formFields.email)) {\n      setFieldError(true);\n      return;\n    }\n    setFieldError(false);\n    try {\n      const { accessToken } = await api.login(formFields);\n      setFormFields({\n        email: \"\",\n        password: \"\"\n      });\n      setBtnDisable(true);\n\n      window.localStorage.setItem(\"token\", accessToken);\n      window.location.href = \"/\";\n    } catch (e) {\n      errorObj.showAlert = true;\n      setErrorObj({ ...errorObj });\n      console.log(e);\n    }\n  };\n\n  const onInputChange = function(e: SyntheticEvent) {\n    const { value, name } = e.target as HTMLInputElement;\n    if (name === \"email\") formFields.email = value;\n    if (name === \"password\") formFields.password = value;\n    setFormFields({ ...formFields });\n\n    const isAllFieldsNotEmpty = Object.values(formFields).every(v => v !== \"\");\n    if (isAllFieldsNotEmpty) {\n      setBtnDisable(false);\n    }\n  };\n\n  const onAlertDismiss = function(e: MouseEvent) {\n    if (errorObj.showAlert) {\n      errorObj.showAlert = false;\n      setErrorObj({ ...errorObj });\n      return;\n    }\n  };\n\n  return (\n    <div className=\"m-2 self-center w-full md:w-1/2\">\n      {errorObj.showAlert && (\n        <Alert status={Status.DANGER} callbackHandler={onAlertDismiss}>\n          <h1 className=\"text-2xl\">Authentication Failed</h1>\n          <span className=\"text\">\n            Forget your password?\n            <Link to=\"/password-recover\" className=\"font-bold pl-1\">\n              Click here\n            </Link>\n          </span>\n        </Alert>\n      )}\n      <Card title=\"Sign in\">\n        <div className=\"mb-5\">\n          <Input\n            type=\"email\"\n            placeholder=\"Your email\"\n            name=\"email\"\n            value={formFields.email}\n            onChangeEvent={onInputChange}\n          />\n          {fieldError && (\n            <span className=\"text-red-600\">\n              <em>Email is not valid</em>\n            </span>\n          )}\n        </div>\n        <div className=\"mb-5\">\n          <Input\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={formFields.password}\n            onChangeEvent={onInputChange}\n          />\n        </div>\n        <div>\n          <PrimaryBtn\n            label=\"Login\"\n            name=\"login\"\n            isDisabled={btnDisable}\n            onClickEvent={onLoginClickHandler}\n          />\n        </div>\n      </Card>\n    </div>\n  );\n};\n","import React, { MouseEvent } from \"react\";\nimport { PrimaryBtn } from \"./Button\";\n\ninterface ToolBarProps {\n  onCallBack?: (e: MouseEvent) => void;\n}\nconst ToolBar = ({ onCallBack }: ToolBarProps) => {\n  return (\n    <div className=\"py-2 mb-1\">\n      <div className=\"flex justify-end\">\n        <div className=\"w-56\">\n          <PrimaryBtn\n            label=\"Create a board\"\n            icon=\"fa fa-plus\"\n            onClickEvent={onCallBack}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ToolBar);\n","import React, { SyntheticEvent, useState } from \"react\";\nimport Checkbox from \"./CheckBox\";\nimport { useAuth, Board } from \"../context/context\";\nimport { ws, toServer } from \"./PublicBoard\";\n\nimport Api from \"../api/Profile\";\n\nconst api = Api();\ninterface PublicBoardHeaderProps {\n  onShareHandler: () => void;\n  board: Board;\n  router: any;\n}\n\nenum CheckBoxTypes {\n  DISABLE_VOTES = \"Disable Votes\",\n  HIDE_VOTE = \"Hide Vote\",\n  SHOULD_HIDE_TASK = \"Should Hide Task\"\n}\n\nexport default ({ onShareHandler, board, router }: PublicBoardHeaderProps) => {\n  const [boardData, setBoardData] = useState<Board>(board);\n  const auth = useAuth();\n  const { user } = auth;\n  const onChangeHandler = async function(e: SyntheticEvent) {\n    const target = e.target as HTMLFormElement;\n    if (target.name === CheckBoxTypes.DISABLE_VOTES) {\n      board.disableVotes = !board.disableVotes;\n    }\n    if (target.name === CheckBoxTypes.HIDE_VOTE) {\n      board.hideVoteCount = !board.hideVoteCount;\n    }\n    if (target.name === CheckBoxTypes.SHOULD_HIDE_TASK) {\n      board.shouldHideTask = !board.shouldHideTask;\n    }\n    setBoardData({ ...boardData, ...board });\n    try {\n      await api.updateBoard(board.id, board);\n      ws.send(toServer);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  return (\n    <div className=\"flex justify-evenly\">\n      <h1 className=\"text-2xl flex-1 truncate pr-3\">{board.name}</h1>\n      {user && (\n        <>\n          <Checkbox\n            name=\"Disable Votes\"\n            isChecked={board.disableVotes}\n            onChange={onChangeHandler}\n          />\n          <Checkbox\n            name=\"Hide Vote\"\n            isChecked={board.hideVoteCount}\n            onChange={onChangeHandler}\n          />\n          <Checkbox\n            name=\"Should Hide Task\"\n            isChecked={board.shouldHideTask}\n            onChange={onChangeHandler}\n          />\n        </>\n      )}\n\n      <span\n        className=\"cursor-pointer py-2 px-2 bg-blue-700 hover:bg-blue-500 text-white\"\n        onClick={onShareHandler}\n      >\n        <em className=\"pr-2\">\n          <i className=\"fa fa-share\" aria-hidden=\"true\" />\n        </em>\n        Share\n      </span>\n      <span\n        className=\"cursor-pointer py-2 px-2 bg-blue-700 hover:bg-blue-500 text-white ml-2\"\n        onClick={() => router.history.push(\"/profile\")}\n      >\n        <em className=\"pr-2\">\n          <i className=\"fa fa-undo\" aria-hidden=\"true\" />\n        </em>\n        Go back\n      </span>\n    </div>\n  );\n};\n","import React, { MouseEvent } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { PrimaryBtn, SecondaryBtn } from \"./Button\";\n\nimport \"./Modal.css\";\n\ninterface ModelProps {\n  children: React.ReactNode | React.ReactNodeArray;\n  title: string;\n  onSave: (e: MouseEvent) => void;\n  onCancel: (e: MouseEvent) => void;\n  show: boolean;\n  shouldDisableBtn: boolean;\n}\n\nconst elem = document.getElementById(\"profile\");\n\nexport default ({\n  children,\n  title,\n  onSave,\n  onCancel,\n  show,\n  shouldDisableBtn\n}: ModelProps) =>\n  ReactDOM.createPortal(\n    <div\n      className={`modal ${\n        !show ? \" opacity-0 pointer-events-none\" : \"\"\n      } fixed w-full h-full top-0 left-0 flex items-center justify-center`}\n    >\n      <div className=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\"></div>\n\n      <div className=\"modal-container bg-white w-11/12 md:w-6/12 lg:w-4/12 mx-auto rounded shadow-lg z-50 overflow-y-auto\">\n        <div className=\"modal-close absolute top-0 right-0 cursor-pointer flex flex-col items-center mt-4 mr-4 text-white text-sm z-50\"></div>\n\n        <div className=\"modal-content py-4 text-left px-6\">\n          <div className=\"flex justify-between items-center pb-3\">\n            <p className=\"text-2xl font-bold\">{title}</p>\n            <div className=\"modal-close cursor-pointer z-50\" onClick={onCancel}>\n              <svg\n                className=\"fill-current text-black\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"18\"\n                height=\"18\"\n                viewBox=\"0 0 18 18\"\n              >\n                <path d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"></path>\n              </svg>\n            </div>\n          </div>\n          {children}\n          <div className=\"flex justify-end pt-2\">\n            <PrimaryBtn\n              label=\"create\"\n              name=\"create\"\n              onClickEvent={onSave}\n              isDisabled={shouldDisableBtn}\n            />\n            <SecondaryBtn\n              label=\"cancel\"\n              name=\"cancel\"\n              onClickEvent={onCancel}\n            />\n          </div>\n        </div>\n      </div>\n    </div>,\n    elem || document.body\n  );\n","import React, { SyntheticEvent } from \"react\";\ninterface CheckboxProps {\n  name: string;\n  isChecked: boolean;\n  value?: string;\n  onChange: (e: SyntheticEvent) => void;\n}\nexport default ({ name, isChecked, value, onChange }: CheckboxProps) => (\n  <>\n    <label className=\"flex items-center truncate ml-2 mr-2\">\n      <input\n        type=\"checkbox\"\n        name={name}\n        value={value}\n        checked={isChecked}\n        onChange={onChange}\n        id={name}\n      />\n      <span className=\"block pl-1 truncate\">{name}</span>\n    </label>\n  </>\n);\n","import React, { useState, MouseEvent, SyntheticEvent, useEffect } from \"react\";\nimport { withRouter, RouteChildrenProps, Redirect } from \"react-router-dom\";\nimport { useAuth, Board } from \"../context/context\";\nimport ToolBar from \"./Toolbar\";\nimport BoardBox, { BOARD_EVENT, CheckBoxEnum } from \"./Board\";\nimport Model from \"./Modal\";\nimport Card from \"./Card\";\nimport Input from \"./Input\";\nimport Alert, { Status } from \"./Alert\";\nimport CheckBox from \"./CheckBox\";\nimport Api from \"../api/Profile\";\n\nconst api = Api();\n\nconst Profile = ({ history }: RouteChildrenProps) => {\n  const auth = useAuth();\n  const { user } = auth;\n  const [showModal, setModal] = useState(false);\n  const [showAlert, setAlert] = useState(false);\n  const [errorAlert, setErrorAlert] = useState(false);\n  const [boards, setBoards] = useState<Board[]>([]);\n  const [url, setUrl] = useState<string>(\"\");\n\n  const [options, setOptions] = useState({\n    disableVotes: false,\n    shouldHideTask: false,\n    hideVoteCount: false,\n    votes: 3,\n    name: \"\",\n    columns: [\n      {\n        name: \"what went well?\",\n        id: 1\n      },\n      {\n        name: \"what didn't go well?\",\n        id: 2\n      },\n      {\n        name: \"Action items?\",\n        id: 3\n      }\n    ]\n  });\n\n  useEffect(() => {\n    if (user) {\n      setBoards([...user.boards]);\n    }\n  }, [user]);\n\n  const onCreateABoard = function(e: MouseEvent) {\n    setModal(true);\n  };\n\n  const onSaveBoard = async function(e: MouseEvent) {\n    try {\n      await api.saveBoard(options);\n      const newBoards = await api.getBoards();\n      setBoards(newBoards);\n      setModal(false);\n    } catch (e) {\n      setErrorAlert(true);\n      throw e;\n    }\n  };\n\n  const onBoardDelete = async function(id: number) {\n    try {\n      await api.deleteBoard(id);\n      const board = boards.find(o => o.id === id);\n      const idx = boards.indexOf(board as Board);\n      boards.splice(idx, 1);\n      setBoards([...boards]);\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  const onBoardClone = async function(id: number) {\n    try {\n      await api.cloneBoard(id);\n      const newBoards = await api.getBoards();\n      setBoards(newBoards);\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  const onChangeHandler = function(e: SyntheticEvent) {\n    const { name, value } = e.target as HTMLInputElement;\n    if (name === CheckBoxEnum.NAME) options.name = value;\n    if (name === CheckBoxEnum.NO_OF_VOTES) options.votes = parseInt(value);\n    setOptions({ ...options });\n  };\n\n  const onCheckBoxChanged = function(e: SyntheticEvent) {\n    const { value } = e.target as HTMLInputElement;\n    if (value === CheckBoxEnum.DISABLE_VOTES) {\n      options.disableVotes = !options.disableVotes;\n    }\n    if (value === CheckBoxEnum.SHOULD_HIDE_TASK) {\n      options.shouldHideTask = !options.shouldHideTask;\n    }\n    if (value === CheckBoxEnum.HIDE_VOTE_COUNT) {\n      options.hideVoteCount = !options.hideVoteCount;\n    }\n    setOptions({ ...options });\n  };\n\n  window.addEventListener(BOARD_EVENT.COPIED, function copiedLinkEvent(e) {\n    setAlert(true);\n    setTimeout(function onTimeout() {\n      setAlert(false);\n      window.removeEventListener(BOARD_EVENT.COPIED, copiedLinkEvent);\n    }, 4000);\n  });\n\n  if (url) {\n    return <Redirect to={url} />;\n  }\n\n  return (\n    <div id=\"profile\">\n      <Model\n        title=\"\"\n        onCancel={() => {\n          setModal(false);\n        }}\n        onSave={onSaveBoard}\n        show={showModal}\n        shouldDisableBtn={options.name === \"\"}\n      >\n        <Card title=\"Create a board\">\n          <div className=\"flex flex-col\">\n            {errorAlert && (\n              <Alert\n                status={Status.DANGER}\n                callbackHandler={() => setErrorAlert(false)}\n              >\n                <h1>Failed to create.</h1>\n              </Alert>\n            )}\n            <div className=\"py-3\">\n              <span className=\"text-gray-700\">\n                minimum 5 characters required\n                <em className=\"text-red-600 pl-1\">*</em>\n              </span>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                value={options.name}\n                placeholder=\"Board name\"\n                onChangeEvent={onChangeHandler}\n              />\n            </div>\n            <div className=\"py-3\">\n              <span className=\"text-gray-700\">\n                minimum 3 and maximum 6 votes per board\n                <em className=\"text-red-600 pl-1\">*</em>\n              </span>\n              <Input\n                type=\"number\"\n                name=\"votes\"\n                value={Number(options.votes)}\n                placeholder=\"No of votes\"\n                min={3}\n                max={6}\n                onChangeEvent={onChangeHandler}\n              />\n            </div>\n\n            <div className=\"py-5\">\n              <div className=\"flex items-center justify-around\">\n                <CheckBox\n                  name=\"Disable Votes\"\n                  value=\"disableVotes\"\n                  onChange={onCheckBoxChanged}\n                  isChecked={options.disableVotes}\n                />\n                <CheckBox\n                  name=\"Should hide tasks\"\n                  value=\"shouldHideTask\"\n                  onChange={onCheckBoxChanged}\n                  isChecked={options.shouldHideTask}\n                />\n                <CheckBox\n                  name=\"Hide vote count\"\n                  value=\"hideVoteCount\"\n                  onChange={onCheckBoxChanged}\n                  isChecked={options.hideVoteCount}\n                />\n              </div>\n            </div>\n          </div>\n        </Card>\n      </Model>\n\n      <ToolBar onCallBack={onCreateABoard} />\n      <hr />\n      {showAlert && (\n        <Alert status={Status.SUCCESS} callbackHandler={() => setAlert(false)}>\n          <h1>Public board link copied!!</h1>\n        </Alert>\n      )}\n      <div className=\"flex flex-col md:flex-row flex-wrap -mx-2 overflow-hidden\">\n        {boards.map(o => (\n          <div\n            key={o.id}\n            onClick={() =>\n              setUrl(`/public/${window.encodeURIComponent(o.salt)}`)\n            }\n            className=\"my-2 px-2 w-full md:overflow-hidden md:w-1/3 lg:w-1/2 xl:w-1/3\"\n          >\n            <BoardBox\n              name={o.name}\n              id={o.id}\n              salt={`public/${o.salt}`}\n              createdAt={o.createdAt}\n              templates={o.templates}\n              onDelete={onBoardDelete}\n              onClone={onBoardClone}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Profile);\n","import React from \"react\";\nexport default () => (\n  <div className=\"container\">\n    <h1>Page Not Found!</h1>\n  </div>\n);\n","import { Api } from \"./ApiInstance\";\n\nexport default () => {\n  return {\n    getPublicBoards: async (signature: string) => {\n      let response = null;\n      try {\n        response = await Api.get(`/publicboard/${signature}`);\n        return response;\n      } catch (e) {\n        console.log(e);\n        throw e;\n      }\n    },\n    submitFeedback: async (signature: string, params: any) => {\n      let response = null;\n      try {\n        response = await Api.post(`/publicboard/${signature}`, params);\n        return response;\n      } catch (e) {\n        console.log(e);\n        throw e;\n      }\n    },\n    deletePublicTask: async (taskId: number, signature: string) => {\n      let response = null;\n      try {\n        response = await Api.delete(`/publicboard/${taskId}/${signature}`);\n        return response;\n      } catch (e) {\n        console.log(e);\n        throw e;\n      }\n    },\n    updateFeedback: async (taskId: number, signature: string, params: any) => {\n      let response = null;\n      try {\n        response = await Api.put(`/publicboard/${taskId}/${signature}`, params);\n        console.log(response, \"respon\");\n        return response;\n      } catch (e) {\n        console.log(e);\n        throw e;\n      }\n    }\n  };\n};\n","import React, { MouseEvent, SyntheticEvent, useState } from \"react\";\nimport { anonymousUser } from \"../utils\";\nimport { SecondaryBtn } from \"./Button\";\nimport Api from \"../api/Public\";\nimport \"./Task.css\";\n\nconst api = Api();\n\ninterface TaskProps {\n  onCallBack?: (task: TaskDto) => void;\n  onDeleteCallBack?: (task: TaskDto) => void;\n  onChange?: (e: SyntheticEvent) => void;\n  value?: string;\n  boardTemplateId: number;\n  signature: string;\n  task: TaskDto;\n}\n\nexport interface TaskDto {\n  id: number;\n  title?: string;\n  description: string;\n  noOfVotes: number;\n  status?: string;\n  boardTemplateId: number;\n  isEditable?: boolean;\n  isNewTask?: boolean;\n  isYours?: string;\n  annonymousToken: string | null;\n}\n\nexport default ({\n  boardTemplateId,\n  signature,\n  task,\n  onDeleteCallBack,\n  onCallBack\n}: TaskProps) => {\n  const [options, setOptions] = useState({\n    description: task?.description || \"\",\n    noOfVotes: task?.noOfVotes || 0,\n    title: task?.title || \"\",\n    annonymousToken: anonymousUser(),\n    boardTemplateId: task?.boardTemplateId || boardTemplateId\n  });\n  const onChangeHandler = function(e: SyntheticEvent) {\n    const target = e.target as HTMLTextAreaElement;\n    const { value } = target;\n    target.style.height = \"30px\";\n    target.style.height = `${target.scrollHeight}px`;\n    options.description = value;\n    if (task) {\n      task.description = value;\n    }\n    setOptions({ ...options });\n  };\n\n  const onAddHandler = async function(e: MouseEvent) {\n    const params = { ...options };\n    let newTask = null;\n    try {\n      if (task?.isEditable) {\n        const { result } = await api.updateFeedback(task.id, signature, params);\n        newTask = result;\n      } else {\n        const { result } = await api.submitFeedback(signature, params);\n        newTask = result;\n      }\n    } catch (e) {\n      console.error(e);\n    } finally {\n      if (onCallBack) onCallBack(newTask);\n    }\n  };\n\n  const onDelete = async function(e: MouseEvent) {\n    if (task.isNewTask) {\n      if (onDeleteCallBack) onDeleteCallBack(task);\n    } else {\n      try {\n        await api.deletePublicTask(task.id, signature);\n        if (onCallBack) onCallBack(task);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  };\n\n  return (\n    <div className=\"border-8 border-gray-800 bg-white\">\n      <textarea\n        onChange={onChangeHandler}\n        value={options.description}\n        className=\"text-area w-full outline-none p-1 m-0\"\n      />\n      <div className=\"flex items-center justify-between px-1 py-1\">\n        <div className=\"w-24\">\n          <SecondaryBtn\n            label={task?.isEditable ? \"update\" : \"save\"}\n            name={task?.isEditable ? \"update\" : \"save\"}\n            onClickEvent={onAddHandler}\n            isDisabled={!options.description}\n          />\n        </div>\n        <span className=\"text-red-600 cursor-pointer pr-2\" onClick={onDelete}>\n          <i className=\"fa fa-trash\" aira-hidden=\"true\" />\n        </span>\n      </div>\n    </div>\n  );\n};\n","import React, { SyntheticEvent, useState, MouseEvent } from \"react\";\nimport Api from \"../api/Public\";\nimport { TaskDto } from \"./TaskAdd\";\nimport { ws, toServer } from \"./PublicBoard\";\nimport { anonymousUser } from \"../utils\";\nimport { Board } from \"../context/context\";\nimport \"./TaskView.css\";\n\nconst api = Api();\n\ninterface TaskViewProps {\n  onEditHandler?: (task: TaskDto) => void;\n  onDeleteHandler?: (status: boolean) => void;\n  onChange?: (e: SyntheticEvent) => void;\n  boardTemplateId: number;\n  signature: string;\n  task: TaskDto;\n  maxVoteLimit?: number;\n  board: Board;\n}\n\nexport default ({\n  onEditHandler,\n  onDeleteHandler,\n  boardTemplateId,\n  task,\n  signature,\n  maxVoteLimit = 5,\n  board\n}: TaskViewProps) => {\n  const [options, setOptions] = useState({\n    noOfVotes: task.noOfVotes,\n    boardTemplateId: boardTemplateId,\n    annonymousToken: anonymousUser()\n  });\n\n  const onDelete = async function(e: MouseEvent) {\n    try {\n      await api.deletePublicTask(task.id, signature);\n      if (onDeleteHandler) onDeleteHandler(true);\n    } catch (e) {\n      if (onDeleteHandler) onDeleteHandler(false);\n      console.error(e);\n    }\n  };\n\n  const onEdit = function(e: MouseEvent) {\n    if (onEditHandler) {\n      task.isEditable = true;\n      onEditHandler(task);\n    }\n  };\n\n  const onVotesHandler = async function() {\n    try {\n      options.noOfVotes += 1;\n      task.noOfVotes = options.noOfVotes;\n      await api.updateFeedback(task.id, signature, task);\n      setOptions({ ...options });\n      ws.send(toServer);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div className=\"bg-gray-800 py-2 px-2 border-b-2 border-black mt-1 last:mb-2\">\n      <div className=\"flex justify-between\">\n        <span\n          className={`text-white flex-1 text-2xl block break-all pr-5 ${\n            board.shouldHideTask ? \"blur-text\" : \"\"\n          }`}\n        >\n          {task.description}\n        </span>\n        {task.annonymousToken === options.annonymousToken && (\n          <span className=\"text-white cursor-pointer\" onClick={onEdit}>\n            <i className=\"fa fa-edit\" aria-hidden=\"true\" />\n          </span>\n        )}\n      </div>\n      <div className=\"flex justify-end items-center pt-2\">\n        {!board.hideVoteCount && (\n          <span\n            className={`text-white cursor-pointer ${\n              options.noOfVotes === maxVoteLimit || board.disableVotes\n                ? \"pointer-events-none text-gray-600\"\n                : \"\"\n            }`}\n            onClick={onVotesHandler}\n          >\n            <i className=\"fa fa-thumbs-up\" aria-hidden=\"true\" />\n            <em className=\"mr-2 pl-1\">{options.noOfVotes}</em>\n          </span>\n        )}\n\n        {task.annonymousToken === options.annonymousToken && (\n          <span className=\"text-red-700 cursor-pointer\" onClick={onDelete}>\n            <i className=\"fa fa-trash\" aria-hidden=\"true\" />\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport * as uuid from \"uuid\";\nimport Api from \"../api/Public\";\nimport TaskAdd, { TaskDto } from \"./TaskAdd\";\nimport TaskView from \"./TaskView\";\nimport PublicBoardHeader from \"./PublicBoardHeader\";\nimport { BoardColumn } from \"../context/context\";\nimport { PrimaryBtn } from \"./Button\";\nimport Loading from \"./Loading\";\nimport { copyLink, anonymousUser } from \"../utils\";\nimport Alert, { Status } from \"./Alert\";\nimport \"./PublicBoard.css\";\n\nexport let ws = new WebSocket(`ws://${window.location.host}`);\nexport const toServer = JSON.stringify({ event: \"refresh\" });\n\nconst api = Api();\n\ninterface PublicBoardProps {\n  signature: string;\n  router: any;\n}\n\nconst getBoards = async function(\n  signature: string\n): Promise<{ board: any; tasks: any }> {\n  try {\n    const res = await api.getPublicBoards(signature);\n    const { board, tasks } = res;\n    tasks.forEach((task: TaskDto) => {\n      task.isEditable = false;\n      task.isNewTask = false;\n    });\n    return { board, tasks };\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport default ({ signature, router }: PublicBoardProps) => {\n  const salt = window.decodeURIComponent(signature);\n  const [board, setBoard] = useState<any>();\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [taskLists, setTaskLists] = useState<TaskDto[]>([]);\n\n  useEffect(() => {\n    async function fetchTasks() {\n      try {\n        const { board, tasks } = await getBoards(salt);\n        setBoard({ ...board });\n        setTaskLists(tasks);\n      } catch (e) {\n        console.log(e);\n        router.history.push(\"/not-found\");\n      } finally {\n        if (ws.readyState === ws.OPEN) {\n          ws.send(JSON.stringify({ event: \"user\" }));\n        } else if (ws.readyState === ws.CLOSED) {\n          ws.onopen = function() {\n            console.log(\"connected\");\n            ws.send(toServer);\n          };\n        }\n        ws.onmessage = function(response) {\n          console.log(response, \"message from server\");\n          const { data } = response;\n          const res = JSON.parse(data);\n          if (res.message === \"update\") {\n            resettingTasks();\n          }\n        };\n      }\n    }\n    fetchTasks();\n  }, [salt, router]);\n\n  const onShareHandler = async function() {\n    try {\n      await copyLink();\n      setTimeout(() => setAlert(false), 4000);\n      setAlert(true);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const resettingTasks = async function(task?: TaskDto) {\n    console.log(task, \"task\");\n    // needed because we shouldn't lose this progress.\n    // meaning if user is adding a new task or editing the existing one.\n    if (task) {\n      task.isEditable = false;\n      task.isNewTask = false;\n      for (let i = 0; i < taskLists.length; i++) {\n        const t = taskLists[i];\n        if (t.id === task.id) {\n          taskLists.splice(i, 1);\n          taskLists.push(task);\n          break;\n        } else if (t.isNewTask) {\n          taskLists.splice(i, 1);\n          taskLists.push(task);\n          break;\n        }\n      }\n      setTaskLists([...taskLists]);\n    } else {\n      const { tasks, board } = await getBoards(salt);\n      const oldTasks = taskLists.filter(\n        (t: TaskDto) => t.isEditable || t.isNewTask\n      );\n      setBoard({ ...board });\n\n      setTaskLists([...oldTasks, ...tasks]);\n    }\n  };\n\n  // callback method for taskview component\n  const onTaskViewDeleteHandler = async function(status: boolean) {\n    if (status) {\n      await resettingTasks();\n      ws.send(toServer);\n    } else {\n      console.log(\"Delete opertion failed\"); // show alert later\n    }\n  };\n\n  const onTaskAddOrEditCallback = async function(task: TaskDto) {\n    await resettingTasks(task);\n    ws.send(toServer);\n  };\n\n  const onDeleteTaskAddHandler = async function(task: TaskDto) {\n    const idx = taskLists.indexOf(task);\n    if (idx > -1) {\n      taskLists.splice(idx, 1);\n      setTaskLists([...taskLists]);\n      ws.send(toServer);\n    }\n  };\n\n  const renderTaskView = function(templateId: number): React.ReactNodeArray {\n    return taskLists.map((task: TaskDto) => {\n      if (\n        task.boardTemplateId === templateId &&\n        !task.isEditable &&\n        !task.isNewTask\n      ) {\n        return (\n          <TaskView\n            key={uuid.v4()}\n            task={task}\n            boardTemplateId={templateId}\n            signature={salt}\n            onDeleteHandler={onTaskViewDeleteHandler}\n            onEditHandler={onEditHandler}\n            maxVoteLimit={board.votes}\n            board={board}\n          />\n        );\n      }\n      return null;\n    });\n  };\n\n  const renderTaskAddOrEdit = function(\n    templateId: number\n  ): React.ReactNodeArray {\n    return taskLists.map((task: TaskDto) => {\n      if (task.boardTemplateId === templateId) {\n        if (task.isEditable && !task.isNewTask) {\n          // return the editing mode of exisitng task\n          return (\n            <TaskAdd\n              key={uuid.v4()}\n              task={task}\n              boardTemplateId={templateId}\n              signature={salt}\n              onCallBack={onTaskAddOrEditCallback}\n            />\n          );\n        } else if (task.isNewTask && !task.isEditable) {\n          // return the newly created task\n          return (\n            <TaskAdd\n              key={uuid.v4()}\n              task={task}\n              boardTemplateId={templateId}\n              signature={salt}\n              onCallBack={onTaskAddOrEditCallback}\n              onDeleteCallBack={onDeleteTaskAddHandler}\n            />\n          );\n        }\n      }\n      return null;\n    });\n  };\n\n  const onEditHandler = function(task: TaskDto) {\n    setTaskLists([...taskLists]);\n  };\n\n  const addNewTaskHandler = function(templateId: number) {\n    const newTask: TaskDto = {\n      boardTemplateId: templateId,\n      description: \"\",\n      noOfVotes: 0,\n      isEditable: false,\n      isNewTask: true,\n      id: taskLists.length + 1, // dummy id\n      annonymousToken: anonymousUser()\n    };\n    setTaskLists([newTask, ...taskLists]);\n  };\n\n  if (!board) return <Loading />;\n\n  return (\n    <>\n      <div className=\"py-2 border-b border-b-2\">\n        {showAlert && (\n          <div className=\"mb-3\">\n            <Alert\n              status={Status.SUCCESS}\n              callbackHandler={() => setAlert(false)}\n            >\n              <h1>Public board link copied!!</h1>\n            </Alert>\n          </div>\n        )}\n        <PublicBoardHeader\n          onShareHandler={onShareHandler}\n          board={board}\n          router={router}\n        />\n      </div>\n      <div className=\"area flex flex-col md:flex-row flex-wrap -mx-2 overflow-hidden\">\n        {board.templates.map((template: BoardColumn) => (\n          <div\n            key={template.id}\n            className=\"my-2 px-2 w-full md:overflow-hidden md:w-1/3 lg:w-1/3 xl:w-1/3 border-dashed border-r-4 hide-last-border\"\n          >\n            <div className=\"flex flex-col\">\n              <div>\n                <span\n                  className=\"uppercase block block truncate\"\n                  title={template.name}\n                >\n                  {template.name}\n                </span>\n                <PrimaryBtn\n                  label=\"+\"\n                  name=\"add\"\n                  onClickEvent={() => addNewTaskHandler(template.id)}\n                />\n              </div>\n              {renderTaskAddOrEdit(template.id)}\n              {renderTaskView(template.id)}\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Layout from \"./components/Layout\";\nimport Signup from \"./components/Signup\";\nimport Login from \"./components/Login\";\nimport Profile from \"./components/Profile\";\nimport NotFound from \"./components/NotFound\";\nimport PublicBoard from \"./components/PublicBoard\";\nimport AppProvider, { useAuth } from \"./context/context\";\nimport { AppEvent } from \"./utils/AppEvent\";\n\nfunction LayoutWrapper() {\n  const auth = useAuth();\n  const { user } = auth;\n  return (\n    <Layout>\n      <div className=\"container mx-auto\">\n        <div className=\"flex flex-col\">\n          <Switch>\n            <Route\n              exact\n              path=\"/public/:signature\"\n              render={props => (\n                <PublicBoard\n                  router={props}\n                  signature={window.encodeURIComponent(\n                    props.match.params.signature\n                  )}\n                />\n              )}\n              strict\n            ></Route>\n\n            <Route exact path=\"/not-found\" strict>\n              <NotFound />\n            </Route>\n\n            {!user && (\n              <>\n                <Redirect path=\"/\" to=\"/login\" />\n\n                <Route exact path=\"/login\" strict>\n                  <Login />\n                </Route>\n                <Route exact path=\"/signup\" strict>\n                  <Signup />\n                </Route>\n              </>\n            )}\n            {user && (\n              <>\n                <Route exact path=\"/profile\">\n                  <Profile />\n                </Route>\n                <Route>\n                  <Redirect to=\"/profile\" />\n                </Route>\n              </>\n            )}\n          </Switch>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nfunction App() {\n  return (\n    <AppProvider>\n      <Router>\n        <div className=\"w-full\">\n          <Header />\n\n          <LayoutWrapper />\n        </div>\n      </Router>\n    </AppProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}